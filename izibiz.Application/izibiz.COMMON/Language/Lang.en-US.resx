<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="accept" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="addDescription" xml:space="preserve">
    <value>Add Description</value>
  </data>
  <data name="againSent" xml:space="preserve">
    <value>Again Sent</value>
  </data>
  <data name="cDate" xml:space="preserve">
    <value>CDATE</value>
  </data>
  <data name="chooseLanguage" xml:space="preserve">
    <value>Choose Language</value>
  </data>
  <data name="draftInvoice" xml:space="preserve">
    <value>Archive Invoice</value>
  </data>
  <data name="eArchive" xml:space="preserve">
    <value>E- Archive</value>
  </data>
  <data name="eDispatch" xml:space="preserve">
    <value>E-Dispatch</value>
  </data>
  <data name="eFreeJob" xml:space="preserve">
    <value>E- Free Job</value>
  </data>
  <data name="eInvoice" xml:space="preserve">
    <value>E- İnvoice</value>
  </data>
  <data name="eManufacturer" xml:space="preserve">
    <value>E-Manufacturers</value>
  </data>
  <data name="envelopeIdentifier" xml:space="preserve">
    <value>ENVELOPE ID</value>
  </data>
  <data name="eReconciliation" xml:space="preserve">
    <value>E-Reconciliation</value>
  </data>
  <data name="faulty" xml:space="preserve">
    <value>Faulty Invoices</value>
  </data>
  <data name="formHomePage" xml:space="preserve">
    <value>İzibiz Desktop | Home Page</value>
  </data>
  <data name="formInvoice" xml:space="preserve">
    <value>İzibiz Desktop | E-İnvoice</value>
  </data>
  <data name="formLoginPage" xml:space="preserve">
    <value>İzibiz Desktop | Login</value>
  </data>
  <data name="frmShowInvoiceStatus" xml:space="preserve">
    <value>İzibiz Desktop | Show  E-İnvoice Status</value>
  </data>
  <data name="from" xml:space="preserve">
    <value>FROM</value>
  </data>
  <data name="getInvoice" xml:space="preserve">
    <value>Get Invoice</value>
  </data>
  <data name="gibSatusDescription" xml:space="preserve">
    <value>GİB STATUS DESC</value>
  </data>
  <data name="gibStatusCode" xml:space="preserve">
    <value>GİB STATUS CODE</value>
  </data>
  <data name="id" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="incomingInvoice" xml:space="preserve">
    <value>Incoming Invoice</value>
  </data>
  <data name="issueDate" xml:space="preserve">
    <value>ISSUEDATE</value>
  </data>
  <data name="listDraftInvoice" xml:space="preserve">
    <value>Draft Invoice List</value>
  </data>
  <data name="listInvoice" xml:space="preserve">
    <value>E-Invoice List</value>
  </data>
  <data name="login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="loginBadRequest" xml:space="preserve">
    <value>Username and password can not be empy !</value>
  </data>
  <data name="loginWarring" xml:space="preserve">
    <value>Login is not succes !  Please check your username and password</value>
  </data>
  <data name="newInvoice" xml:space="preserve">
    <value>+New Invoice </value>
  </data>
  <data name="password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="pdfDownload" xml:space="preserve">
    <value>Pdf Download</value>
  </data>
  <data name="preview" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="profileid" xml:space="preserve">
    <value>PROFILEID</value>
  </data>
  <data name="refresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="reject" xml:space="preserve">
    <value>Reject</value>
  </data>
  <data name="sender" xml:space="preserve">
    <value>SENDER</value>
  </data>
  <data name="sentInvoice" xml:space="preserve">
    <value>Sent Invoice</value>
  </data>
  <data name="settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="showPassword" xml:space="preserve">
    <value>Show Password</value>
  </data>
  <data name="status" xml:space="preserve">
    <value>STATUS</value>
  </data>
  <data name="statusDesc" xml:space="preserve">
    <value>STATUS DESC</value>
  </data>
  <data name="succesChangeState" xml:space="preserve">
    <value>Successful Change State</value>
  </data>
  <data name="supplier" xml:space="preserve">
    <value>SUPPLİER</value>
  </data>
  <data name="to" xml:space="preserve">
    <value>TO</value>
  </data>
  <data name="type" xml:space="preserve">
    <value>TYPE</value>
  </data>
  <data name="unsuccesChangeState" xml:space="preserve">
    <value>Unsuccessful Change State</value>
  </data>
  <data name="updateState" xml:space="preserve">
    <value>Update State</value>
  </data>
  <data name="usurname" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="uuid" xml:space="preserve">
    <value>UUID</value>
  </data>
  <data name="warning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="warning8Day" xml:space="preserve">
    <value>The response time to the invoice is 8 days. Unable to respond because the billing response time has expired</value>
  </data>
  <data name="warningBasicInvoice" xml:space="preserve">
    <value>Not Responsible To Basic Invoice</value>
  </data>
  <data name="warningHasAnswer" xml:space="preserve">
    <value>No second response because the invoice is answered</value>
  </data>
  <data name="writeDescription" xml:space="preserve">
    <value>Please Write  Description</value>
  </data>
</root>